{"version":3,"file":"static/js/8812.72cb46fe.chunk.js","mappings":"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","sources":["components/shared-components/AsyncTable/index.js","components/shared-components/Flex/index.js","graphql/live.js","views/app-views/live/table.js","views/app-views/live/index.js","../node_modules/@ant-design/icons-svg/es/asn/EyeTwoTone.js","../node_modules/@ant-design/icons/es/icons/EyeTwoTone.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Card, Input, Pagination, Table } from 'antd'\nimport { PlusCircleOutlined, SearchOutlined } from '@ant-design/icons';\nimport IntlMessage from 'components/util-components/IntlMessage';\nimport Flex from '../Flex';\n\nconst AsyncTable = ({ fetchData, loading, columns, data, permissions, showModal }) => {\n\n    const [filter, setFilter] = useState('');\n\n    const triggerFetch = (page, pageSize) => {\n        var start = 0;\n        var end = pageSize;\n        if (page !== 1) {\n            start = (page * pageSize) - pageSize\n            end = pageSize * page\n        }\n        fetchData({ variables: { offset: start, limit: end, filter: filter, program: 0 } })\n    }\n\n    const onPageChange = (page, pageSize) => {\n        triggerFetch(page, pageSize);\n    }\n\n    const onSearch = e => {\n        const value = e.currentTarget.value\n        fetchData({ variables: { offset: 0, limit: 10, filter: value, program: 0 } })\n        setFilter(value)\n    }\n\n    return (\n\t\t<Card>\n            <Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\n                <Flex className=\"mb-1\" mobileFlex={false}>\n                    <div className=\"mr-md-3 mb-3\">\n                        <Input placeholder={'Хайх'} prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\n                    </div>\n                </Flex>\n                { permissions.create === true &&\n                    <div className=\"mr-md-3 mb-3\">\n                        <Button onClick={showModal} type=\"primary\" icon={<PlusCircleOutlined />} block> <IntlMessage id=\"add_new\" /></Button>\n                    </div>\n                }\n            </Flex>\n            <div className=\"table-responsive\">\n                <Table \n                    // pagination={false}\n                    size=\"small\"\n                    columns={columns} \n                    dataSource={data}\n                    rowKey='id' \n                    bordered\n                    loading={loading}\n                />\n                {/* <Pagination \n                    className='text-right mt-4' \n                    total={count} \n                    onChange={onPageChange}\n                /> */}\n            </div>\n        </Card>    \n    )\n}\n\nexport default AsyncTable","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Flex = props => {\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\n\treturn (\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\n\t\t\t{children}\n\t\t</div>\n\t)\n}\n\nFlex.propTypes = {\n\tclassName: PropTypes.string,\n\talignItems: PropTypes.string,\n\tflexDirection: PropTypes.string,\n\tjustifyContent: PropTypes.string,\n\tmobileFlex: PropTypes.bool\n}\n\nFlex.defaultProps = {\n\tmobileFlex: true,\n\tflexDirection: 'row',\n\tclassName: ''\n};\n\n\nexport default Flex\n","import { gql } from '@apollo/client';\n\nexport const ALL_LIVES = gql `\n    query allLives ($offset: Int!, $limit: Int!, $filter: String) {\n        count (appName: \"live\", modelName: \"Live\", filter: $filter) {\n            count\n        }\n        allLives (offset: $offset, limit: $limit, filter: $filter) {\n            id\n            title\n            date\n            duration\n            description\n            status\n            type\n            section {\n                id\n                section\n            }\n            password\n            teacher {\n                id\n                name\n            }\n            password\n        }\n    }\n`;\n\nexport const CREATE_LIVE = gql `\n    mutation createLive ($date: String, $description: String, $duration: Int, $status: String, $teacher: Int, $title: String, $section: Int) {\n        createLive (date: $date, description: $description, duration: $duration, status: $status, teacher: $teacher, title: $title, section: $section) {\n            live {\n                id\n            }\n        }\n    }\n`;\n\nexport const UPDATE_LIVE = gql `\n    mutation updateLive ($date: String, $description: String, $duration: Int, $id: ID, $status: String, $teacher: Int, $title: String, $section: Int) {\n        updateLive (date: $date, description: $description, duration: $duration, id: $id, status: $status, teacher: $teacher, title: $title, section: $section) {\n            live {\n                id\n            }\n        }\n    }\n`;\n\nexport const DELETE_LIVE = gql `\n    mutation deleteLive ($id: ID) {\n        deleteLive (id: $id) {\n            live {\n                title\n            }\n        }\n    }\n`;\n\nexport const GET_LIVE_URL = gql `\n    query getLiveurl ($liveId: Int) {\n        getLiveurl (liveId: $liveId) {\n            url\n        }\n    }\n`;\n","import React, { useState, useEffect, lazy, Suspense } from 'react'\nimport { Modal, message, Button } from 'antd';\nimport { DeleteTwoTone, EditTwoTone, EyeTwoTone } from '@ant-design/icons';\nimport utils from 'utils';\nimport { useMutation, useLazyQuery } from '@apollo/client';\nimport IntlMessage from \"components/util-components/IntlMessage\";\nimport { ALL_LIVES, DELETE_LIVE, GET_LIVE_URL } from 'graphql/live';\nimport moment from 'moment';\nimport AsyncTable from 'components/shared-components/AsyncTable';\nimport Loading from 'components/shared-components/Loading';\n\nconst SchoolForm = lazy(() => import(`./form`));\n\nconst LiveTable = (props) => {\n\n\tconst [list, setList] = useState([])\n    const [count, setCount] = useState(0);\n\tconst [fetchData, { loading, refetch }] = useLazyQuery(ALL_LIVES, {\n        fetchPolicy: 'network-only',\n        onCompleted: data => {\n            setCount(data.count.count);\n            setList(data.allLives);\n        }\n\t});\n\n    const [fetchGetUrl] = useLazyQuery(GET_LIVE_URL, {\n        fetchPolicy: 'network-only',\n        onCompleted: result => {\n            window.open(result.getLiveurl.url, '_blank');\n        }\n    })\n\n    useEffect(() => {\n        fetchData({ variables: { offset: 0, limit: 10, filter: \"\"} })\n    }, [fetchData])\n\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\n\tconst [editData, setEditData] = useState([]);\n\tconst [formType, setFormType] = useState(\"\");\n\n    const showModal = () => {\n\t\tsetFormType(\"create\")\n      \tsetIsModalVisible(true);\n    };\n\n    const handleCancel = () => {\n      \tsetIsModalVisible(false);\n    };\n\n\tconst editRow = row => {\n\t\tsetEditData(row);\n\t\tsetFormType(\"edit\")\n\t\tsetIsModalVisible(true);\n\t};\n\n\tconst { confirm } = Modal;\n\n\tconst [destroy] = useMutation(DELETE_LIVE, {\n\t\tonCompleted: data => {\n            message.success('Амжилттай устлаа');\n\t\t\trefetch();\n\t\t}\n\t});\n\t\n\tfunction deleteRow(row) {\n\t\tconfirm({\n            title: 'Устгах уу?',\n            okText: 'Устгах',\n            okType: 'danger',\n            cancelText: 'Болих',\n            onOk() {\n                destroy({ variables: { id: row.id, name: row.name, nameMgl: row.nameMgl } }); \n            },\n\t\t});\n\t}\n\n    const showLive = (values) => {\n        fetchGetUrl({ variables: { liveId: values.id } })\n    }\n\n\tconst tableColumns = [\n\t\t{\n\t\t\tkey: 'title',\n\t\t\ttitle: <IntlMessage id=\"title\" />,\n\t\t\tdataIndex: 'title',\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'title')\n\t\t},\n\t\t{\n\t\t\tkey: 'type',\n\t\t\ttitle: <IntlMessage id=\"onlineType\" />,\n\t\t\tdataIndex: 'type',\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'type'),\n            render: text => <IntlMessage id={text} />\n\t\t},\n\t\t{\n\t\t\tkey: 'teacher',\n            title: <IntlMessage id=\"teacher\" />,\n            dataIndex: ['teacher', 'name'],\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'teacher')\n\t\t},\n\t\t{\n\t\t\tkey: 'date',\n\t\t\ttitle: <IntlMessage id=\"date\" />,\n\t\t\tdataIndex: 'date',\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'date'),\n\t\t\trender: text => <span>{moment(text).format('YYYY-MM-DD HH:mm')}</span>,\n\t\t},\n\t\t{\n\t\t\tkey: 'duration',\n\t\t\ttitle: <IntlMessage id=\"duration\" />,\n\t\t\tdataIndex: 'duration',\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'duration')\n\t\t},\n        {\n            key: 'actions',\n            title: <IntlMessage id=\"main.action\" />,\n            width: '20vw',\n            dataIndex: 'actions',\n            render: (_, elm) => (\n                <div className=\"text-center\">\n                    <Button size=\"small\" type=\"text\" icon={<EyeTwoTone />} onClick={() => showLive(elm)} > <IntlMessage id=\"show\" /> </Button>\n                    { props.permissions.edit === true &&\n                        <Button size=\"small\" onClick={() => editRow(elm)} type=\"text\" icon={<EditTwoTone twoToneColor=\"#ffdb00\"/>} > <IntlMessage id=\"edit\" /> </Button>\n                    }\n                    { props.permissions.destroy === true &&\n                        <Button size=\"small\" onClick={() => deleteRow(elm)} type=\"text\" icon={<DeleteTwoTone twoToneColor=\"#f42f2f\"/>} > <IntlMessage id=\"delete\" /></Button>\n                    }\n                </div>\n            )\n        }\n\t];\n\n\treturn (\n\t\t<>\n            { props.permissions.edit || props.permissions.create ?\n                <Modal\n                    width={'80vw'}\n                    forceRender\n                    title={formType === 'edit' ? <IntlMessage id='edit' /> : <IntlMessage id=\"add_new\" /> }\n                    visible={isModalVisible} \n                    okText={<IntlMessage id=\"main.okText\" />}\n                    cancelText={<IntlMessage id=\"main.cancelText\" />}\n                    onCancel={handleCancel}\n                    okButtonProps={{form:'SchoolForm', key: 'submit', htmlType: 'submit'}}\n                >\n                    <Suspense fallback={<Loading cover=\"content\"/>}>\n                        <SchoolForm formType={formType} setIsModalVisible={setIsModalVisible} refetch={refetch} editData={editData}/>\n                    </Suspense>\n                </Modal>\n                : null\n            }\n            <AsyncTable \n                fetchData={fetchData}\n                loading={loading}\n                columns={tableColumns}\n                data={list}\n                count={count}\n                permissions={props.permissions}\n                showModal={showModal}\n           />\n\t\t</>\n\t\t\n\t)\n}\n\nexport default LiveTable\n","import React from \"react\";\nimport AllSchoolTable from './table';\nimport { CheckPer } from 'hooks/checkPermission';\nimport Loading from \"components/shared-components/Loading\";\n\nconst Index = (props) => {\n\n    const create = CheckPer('add_live');\n    const edit = CheckPer('change_live');\n    const destroy = CheckPer('delete_live');\n\n    const permissions = {\n        create: create,\n        edit: edit,\n        destroy: destroy\n    }\n\n    if (Object.values(permissions).indexOf('loading') > -1) {\n        return <Loading cover=\"content\" />\n    }\n\n    return (\n        <AllSchoolTable title={props.title} permissions={permissions} />\n    )\n}\n\nexport default Index;\n","// This icon file is generated automatically.\nvar EyeTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M81.8 537.8a60.3 60.3 0 010-51.5C176.6 286.5 319.8 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c-192.1 0-335.4-100.5-430.2-300.2z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 258c-161.3 0-279.4 81.8-362.7 254C232.6 684.2 350.7 766 512 766c161.4 0 279.5-81.8 362.7-254C791.4 339.8 673.3 258 512 258zm-4 430c-97.2 0-176-78.8-176-176s78.8-176 176-176 176 78.8 176 176-78.8 176-176 176z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258s279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M508 336c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\", \"fill\": primaryColor } }] }; }, \"name\": \"eye\", \"theme\": \"twotone\" };\nexport default EyeTwoTone;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EyeTwoToneSvg from \"@ant-design/icons-svg/es/asn/EyeTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\nvar EyeTwoTone = function EyeTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EyeTwoToneSvg\n  }));\n};\nEyeTwoTone.displayName = 'EyeTwoTone';\nexport default /*#__PURE__*/React.forwardRef(EyeTwoTone);"],"names":["fetchData","loading","columns","data","permissions","showModal","useState","setFilter","alignItems","justifyContent","mobileFlex","className","placeholder","prefix","onChange","e","value","currentTarget","variables","offset","limit","filter","program","onSearch","create","onClick","type","icon","block","id","size","dataSource","rowKey","bordered","Flex","props","children","flexDirection","defaultProps","ALL_LIVES","gql","CREATE_LIVE","UPDATE_LIVE","DELETE_LIVE","GET_LIVE_URL","SchoolForm","lazy","list","setList","count","setCount","useLazyQuery","fetchPolicy","onCompleted","allLives","refetch","result","window","open","getLiveurl","url","fetchGetUrl","useEffect","isModalVisible","setIsModalVisible","editData","setEditData","formType","setFormType","confirm","Modal","useMutation","message","destroy","tableColumns","key","title","IntlMessage","dataIndex","sorter","a","b","utils","render","text","moment","format","width","_","elm","EyeTwoTone","liveId","edit","EditTwoTone","twoToneColor","row","okText","okType","cancelText","onOk","name","nameMgl","DeleteTwoTone","forceRender","visible","onCancel","okButtonProps","form","htmlType","Suspense","fallback","Loading","cover","AsyncTable","CheckPer","Object","values","indexOf","primaryColor","secondaryColor","ref","React","AntdIcon","_objectSpread","EyeTwoToneSvg","displayName"],"sourceRoot":""}