{"version":3,"file":"static/js/8447.ec19bfc7.chunk.js","mappings":"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","sources":["views/app-views/web-configs/group-permission/transfer.js","views/app-views/web-configs/group-permission/index.js"],"sourcesContent":["import React from 'react';\nimport { Transfer, Table, Card, Tag } from 'antd';\nimport difference from 'lodash/difference';\n\nconst tableColumns = [\n    {\n        dataIndex: 'title',\n        title: 'Нэр',\n        render: (text, record) => (\n            <Tag color={record.color} >{text}</Tag>\n        ),\n    },\n];\n\nconst TableTransfer = ({ loading, ...restProps }) => (\n    <Transfer\n        {...restProps} \n        showSelectAll={false}\n    >\n        {({\n            filteredItems,\n            onItemSelectAll,\n            onItemSelect,\n            selectedKeys: listSelectedKeys,\n        }) => {\n            const columns = tableColumns;\n\n            const rowSelection = {\n                getCheckboxProps: item => ({ disabled: item.disabled }),\n                onSelectAll(selected, selectedRows) {\n                    const treeSelectedKeys = selectedRows\n                        .filter(item => !item.disabled)\n                        .map(({ key }) => key);\n                    const diffKeys = selected\n                        ? difference(treeSelectedKeys, listSelectedKeys)\n                        : difference(listSelectedKeys, treeSelectedKeys);\n                    onItemSelectAll(diffKeys, selected);\n                },\n                onSelect({ key }, selected) {\n                    onItemSelect(key, selected);\n                },\n                selectedRowKeys: listSelectedKeys,\n            };\n\n            return (\n                <Table\n                    loading={loading}\n                    rowSelection={rowSelection}\n                    columns={columns}\n                    dataSource={filteredItems}\n                    size=\"small\"\n                    style={{ pointerEvents: null }}\n                    onRow={({ key, disabled: itemDisabled }) => ({\n                        onClick: () => {\n                        if (itemDisabled) return;\n                            onItemSelect(key, !listSelectedKeys.includes(key));\n                        },\n                    })}\n                />\n            );\n        }}\n    </Transfer>\n);\n\nconst TransferCard = ({ data, permissions, loading, updateData }) => {\n\n    const targetKeys = data.permissions.map((selected) => (\n        selected.codename\n    ))\n\n    const onChange = (targetKeys, direction, moveKeys) => {\n        const action = direction === 'left' ? false : true\n        moveKeys.map((codename) => (\n            updateData({ variables: { action: action, codename: codename, id: data.id } })\n        ))\n    };\n\n    return (\n        <Card\n            title={data.name}\n        >\n            <TableTransfer\n                loading={loading}\n                dataSource={permissions}\n                targetKeys={targetKeys}\n                showSearch={true}\n                onChange={onChange}\n                filterOption={(inputValue, item) =>\n                    item.title.toLowerCase().indexOf(inputValue) !== -1\n                }\n            />\n        </Card>\n    );\n}\n\nexport default TransferCard;","import React, { useEffect, useState } from \"react\";\nimport { useQuery, useLazyQuery, useMutation } from \"@apollo/client\";\nimport { ALL_GROUPS, PERMISSIONS, UPDATE_GROUP_PERMISSION } from \"graphql/role\";\nimport TransferCard from './transfer';\nimport { Tag } from \"antd\";\n\nconst Index = () => {\n\n    const [groups, setGroups] = useState([]);\n    const [permissions, setPermissions] = useState([])\n    const [isLoading, setIsLoading] = useState(true);\n\n    const { loading: groupLoading, refetch } = useQuery(ALL_GROUPS, {\n        onCompleted: data => {\n            setGroups(data.allGroups);\n            fetchPermissions();\n        }\n    })\n\n    const [fetchPermissions, { loading: permissionLoading }] = useLazyQuery(PERMISSIONS, {\n        onCompleted: data => {\n            const filterData = data.permissions.flatMap(function(permission) {\n                \n                const children = []\n                \n                permission.add && children.push({ \n                    key: `add_${permission.codeName}`, \n                    title: `${permission.name} нэмэх`,\n                    color: 'green'\n                })\n                permission.change && children.push({ \n                    key: `change_${permission.codeName}`, \n                    title: `${permission.name} засах`,\n                    color: 'orange'\n                })\n                permission.view && children.push({ \n                    key: `view_${permission.codeName}`, \n                    title: `${permission.name} харах`,\n                    color: 'geekblue'\n                })\n                permission.delete && children.push({ \n                    key: `delete_${permission.codeName}`, \n                    title: `${permission.name} устгах`,\n                    color: 'magenta'\n                })\n                \n                return children\n            })\n            setPermissions(filterData);\n        }\n    })\n\n    const [update, { loading: updateLoading}] = useMutation(UPDATE_GROUP_PERMISSION, {\n        onCompleted: data => {\n            refetch();\n        }\n    })\n\n    useEffect(() => {\n        if (groupLoading || permissionLoading || updateLoading) {\n            setIsLoading(true);\n        }\n        if (!groupLoading && !permissionLoading && !updateLoading) {\n            setIsLoading(false);\n        }\n    }, [groupLoading, permissionLoading, updateLoading])\n    \n\n    return (\n        <>\n            <div className=\"mb-4\">\n                <Tag color=\"green\">Нэмэх эрх</Tag>\n                <Tag color=\"orange\">Засах эрх</Tag>\n                <Tag color=\"geekblue\">Харах эрх</Tag>\n                <Tag color=\"magenta\">Устгах эрх</Tag>\n            </div>\n            { groups.map((item, index) => (\n                <TransferCard \n                    updateData={update}\n                    loading={isLoading}\n                    data={item}\n                    key={index}\n                    permissions={permissions}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default Index;\n"],"names":["tableColumns","dataIndex","title","render","text","record","color","TableTransfer","loading","restProps","showSelectAll","filteredItems","onItemSelectAll","onItemSelect","listSelectedKeys","selectedKeys","columns","rowSelection","getCheckboxProps","item","disabled","onSelectAll","selected","selectedRows","treeSelectedKeys","filter","map","key","diffKeys","difference","onSelect","selectedRowKeys","dataSource","size","style","pointerEvents","onRow","itemDisabled","onClick","includes","data","permissions","updateData","targetKeys","codename","name","showSearch","onChange","direction","moveKeys","action","variables","id","filterOption","inputValue","toLowerCase","indexOf","useState","groups","setGroups","setPermissions","isLoading","setIsLoading","useQuery","ALL_GROUPS","onCompleted","allGroups","fetchPermissions","groupLoading","refetch","useLazyQuery","PERMISSIONS","filterData","flatMap","permission","children","add","push","codeName","change","view","delete","permissionLoading","useMutation","UPDATE_GROUP_PERMISSION","update","updateLoading","useEffect","className","index"],"sourceRoot":""}