{"version":3,"file":"static/js/6689.ee710063.chunk.js","mappings":"yQAwGA,UA9Fc,WAEV,OAAgCA,EAAAA,EAAAA,YAAU,eAAnCC,EAAQ,KAAEC,EAAW,KAC5B,GAA4BF,EAAAA,EAAAA,UAAS,IAAG,eAAjCG,EAAM,KAAEC,EAAS,KACxB,GAAsCJ,EAAAA,EAAAA,UAAS,IAAG,eAA3CK,EAAW,KAAEC,EAAc,KAElC,GAAmCC,EAAAA,EAAAA,GAASC,EAAAA,GAAU,CAClDC,UAAW,CAAEN,OAAQA,KADjBO,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASC,EAAO,EAAPA,QAIvB,GAA6BC,EAAAA,EAAAA,GAAYC,EAAAA,GAAqB,CAC1DC,YAAa,SAAAL,GACTE,IACAN,GAAe,SAAAU,GAAQ,OAAIA,EAASb,QAAO,SAACc,GAAI,OAAKA,IAASP,EAAKQ,mBAAmBC,aAAaC,EAAE,GAAC,GAC1G,IAJGF,GAKL,YALuB,GA0BzB,OACI,+BACI,gBAAKG,UAAU,gEAA+D,SAExEpB,GACE,SAAC,IAAgB,CAACA,SAAUA,EAAUC,YAAaA,KAGnD,iCACI,iBAAKmB,UAAU,2CAA0C,WACrD,kBACIC,SA9B5B,SAAyBC,GACjBA,EAAEC,OAAOC,QACTnB,EAAeI,EAAKgB,QAAQC,KAAI,SAAAC,GAAE,OAAIA,EAAGR,EAAE,KAE3Cd,EAAe,GAEvB,EAyB4BuB,KAAK,WACLR,UAAU,sEAEZhB,EAAYyB,OAAS,GACnB,SAAC,IAAU,CACPC,MAAM,qDACNC,OAAO,uCACPC,WAAW,iCACXC,UA/BhC,WACI7B,EAAYsB,KAAI,SAACV,GACbC,EAAmB,CAAET,UAAW,CAAEW,GAAIH,EAAMkB,WAAY,cAC5D,GACJ,EA2BoD,UAEpB,SAAC,IAAS,CACNd,UAAU,iDAId,iBAAKA,UAAU,2CAA0C,WACrD,SAAC,IAAK,CAACC,SAAU,SAAAC,GAAC,OAjCtD,SAAkBA,GACpB,IAAMa,EAAQb,EAAEc,cAAcD,MACxBhC,EAAUgC,EACjB,CA8B6DE,CAASf,EAAE,EAAEF,UAAU,sBAAsBkB,YAAa,2BAAQC,QAAQ,SAAC,IAAc,OAC/G,SAAC,IAAW,CACRnB,UAAU,0CACVoB,QAAS,kBAAM7B,GAAS,WAK5C,gBAAKS,UAAU,MAAK,SACdV,GAAU,SAAC,IAAO,CAAC+B,MAAM,YACvBhC,EAAKgB,QAAQC,KAAI,SAACV,EAAM0B,GAAK,OAC7B,SAAC,IAAgB,CACb1C,SAAUA,EACV2C,UAAWvC,EAAYwC,SAAS5B,EAAKG,IACrCV,KAAMO,EAEN6B,IAAI,EACJ5C,YAAaA,EACbI,eAAgBA,GAHXqC,EAIP,YASlC,C","sources":["views/app-views/conversation/inbox/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Input, Popconfirm } from 'antd'\nimport { SearchOutlined } from '@ant-design/icons';\nimport ConversationCard from 'components/shared-components/ConversationCard';\nimport ConversationBody from 'components/shared-components/ConversationBody';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { DELETE_CONVERSATION, MY_INBOX } from 'graphql/conversation';\nimport Loading from 'components/shared-components/Loading';\nimport { RefreshIcon, TrashIcon } from '@heroicons/react/outline';\n\nconst Index = () => {\n\n    const [selected, setSelected] = useState()\n    const [filter, setFilter] = useState(\"\")\n    const [checkedList, setCheckedList] = useState([])\n\n    const { data, loading, refetch } = useQuery(MY_INBOX, {\n        variables: { filter: filter }\n    }) \n\n    const [deleteConversation] = useMutation(DELETE_CONVERSATION, {\n        onCompleted: data => {\n            refetch()\n            setCheckedList(prevList => prevList.filter((item) => item !== data.deleteConversation.conversation.id))\n        }\n    })\n\n    function handleSelectAll(e) {\n        if (e.target.checked) {\n            setCheckedList(data.myInbox.map(li => li.id));\n        } else {\n            setCheckedList([]);\n        }\n    }\n\n    function onDelete() {\n        checkedList.map((item) => {\n            deleteConversation({ variables: { id: item, deleteType: 'recipient' } })\n        })\n    }\n\n    function onSearch(e) {\n\t\tconst value = e.currentTarget.value\n        setFilter(value)\n\t}\n\n    return (\n        <>\n            <div className=\"flex flex-col w-full m-2 h-full bg-white rounded-4 md:w-10/12\">\n                \n                { selected ? (\n                    <ConversationBody selected={selected} setSelected={setSelected} />\n                    )\n                    :\n                    <>\n                        <div className='flex flex-row items-center space-x-2 m-4'>\n                            <input\n                                onChange={handleSelectAll}\n                                type=\"checkbox\"\n                                className=\"focus:ring-emind-500 h-5 w-5 accent-emind border-gray-300 rounded\"\n                            />\n                            { checkedList.length > 0 ?\n                                <Popconfirm\n                                    title=\"Устгах уу?\"\n                                    okText=\"Устгах\"\n                                    cancelText=\"Болих\"\n                                    onConfirm={onDelete}\n                                >\n                                    <TrashIcon \n                                        className='h-5 w-5 text-red-500 hover:cursor-pointer'\n                                    />\n                                </Popconfirm>\n                                :\n                                    <div className='flex justify-between w-full items-center'>\n                                        <Input onChange={e => onSearch(e)} className='ml-4 w-2/3 md:w-1/3' placeholder={'Хайх'} prefix={<SearchOutlined />} />\n                                        <RefreshIcon \n                                            className='h-5 w-5 text-emind hover:cursor-pointer'  \n                                            onClick={() => refetch()}\n                                        />\n                                    </div>\n                            }\n                        </div>\n                        <div className='m-2'>\n                            { loading ? <Loading cover='content' /> :\n                                data.myInbox.map((item, index) => (\n                                <ConversationCard \n                                    selected={selected}\n                                    isChecked={checkedList.includes(item.id)}\n                                    data={item}\n                                    key={index} \n                                    to={false}\n                                    setSelected={setSelected} \n                                    setCheckedList={setCheckedList}\n                                />\n                            ))}\n                        </div>\n                    </>\n                }\n                \n            </div>\n        </>\n    )\n}\n\nexport default Index"],"names":["useState","selected","setSelected","filter","setFilter","checkedList","setCheckedList","useQuery","MY_INBOX","variables","data","loading","refetch","useMutation","DELETE_CONVERSATION","onCompleted","prevList","item","deleteConversation","conversation","id","className","onChange","e","target","checked","myInbox","map","li","type","length","title","okText","cancelText","onConfirm","deleteType","value","currentTarget","onSearch","placeholder","prefix","onClick","cover","index","isChecked","includes","to"],"sourceRoot":""}